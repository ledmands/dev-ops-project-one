@page
@using DevOpsProjectOne.Models;
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome to the Suck</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<!-- trying a table from example project -->
<table class="table table-dark table-striped table-hover caption-top">
    <caption>List of users</caption>
    <thead>
        <tr>
            <th scope="col">First Name</th>
            <th scope="col">Last Name</th>
            <th scope="col">Plant Location</th>
            <th scope="col">Phone Number</th>
        </tr>
    </thead>
    <tbody class="table-group-divider">
        @{
            List<User> user = Model.db.User.ToList();
            for (int i = 0; i < inventory.Count; i++)
            {
                Inventory inv = inventory[i];
                        <tr data-bs-toggle="modal" data-bs-target="#changeModal" onclick="populateModal(@(i))">
                            <td class="ProductCode">@inv.ProductCode</td>
                            <td class="ProductDescription">@inv.ProductDescription</td>
                            <td class="ProductInDate">@inv.ProductInDate</td>
                            <td class="ProductQuantity">@inv.ProductQuantity</td>
                            <td class="ProductPrice">@inv.ProductPrice</td>
                            <td style="display:none;"><data id="row@(i)" style="display: none;">@JsonSerializer.Serialize(inv)</data></td>
                        </tr>
            }
        }
    </tbody>
</table>